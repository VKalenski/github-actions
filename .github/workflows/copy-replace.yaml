#############################################################################################
#################### GitHub Actions Workflow: Copy and Replace Subfolder ####################
#############################################################################################
# Description:
# This workflow copies a selected subfolder from a given base folder to a new destination
# subfolder. It also replaces all occurrences of the original subfolder name inside the
# files with the new subfolder name, and commits the changes back to the main branch.
#
# Steps:
# 1. Verify that the source subfolder exists.
# 2. Ensure that the destination subfolder does not already exist.
# 3. Copy the source subfolder into the new destination subfolder.
# 4. Replace all occurrences of the source subfolder name inside file contents with the new name.
# 5. Commit and push the changes to the repository using GITHUB_TOKEN authentication.
#
# Note:
# The workflow uses 'persist-credentials: false' during checkout to avoid storing
# personal credentials. All Git operations are authenticated with the default GITHUB_TOKEN.
#############################################################################################

name: Copy and Replace Subfolder

on:
  workflow_dispatch:
    inputs:
      base-folder:
        description: 'Choose the base folder'
        required: true
        type: choice
        options:
          - ./TestFiles/product
          - ./TestFiles/review
      sub-folder:
        description: 'Choose a subfolder inside the base folder. For example: "product-0-0-0"'
        required: true
        type: string
      destination-sub-folder:
        description: 'Choose a subfolder inside the base folder. For example: "product-x-0-0"'
        required: true
        type: string

jobs:
  copy-folder:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        continue-on-error: false
        with:
          persist-credentials: "false"

      - name: Check if source folder exists
        continue-on-error: false
        run: |
          SRC="${{ inputs.base-folder }}/${{ inputs.sub-folder }}"
          if [ ! -d "$SRC" ]; then
            echo "ERROR: Source folder $SRC does not exist. Aborting process."
            exit 1
          else
            echo "Source folder $SRC found, proceeding with copying."
          fi

      - name: Check if destination folder already exists
        continue-on-error: false
        run: |
          DEST="${{ inputs.base-folder }}/${{ inputs.destination-sub-folder }}"
          if [ -d "$DEST" ]; then
            echo "ERROR: Destination folder $DEST already exists. Aborting process."
            exit 1
          else
            echo "Destination folder does not exist, proceeding with copying."
          fi

      - name: Copy selected sub-folder with a new name
        run: |
          echo "Copying from ${{ inputs.base-folder }}/${{ inputs.sub-folder }} to ${{ inputs.base-folder }}/${{ inputs.destination-sub-folder }}"
          mkdir -p "${{ inputs.base-folder }}/${{ inputs.destination-sub-folder }}"
          cp -r "${{ inputs.base-folder }}/${{ inputs.sub-folder }}/." "${{ inputs.base-folder }}/${{ inputs.destination-sub-folder }}"

      - name: Replace sub-folder name in files
        run: |
          echo "Replacing all instances of ${{ inputs.sub-folder }} with ${{ inputs.destination-sub-folder }} in files."
          find "${{ inputs.base-folder }}/${{ inputs.destination-sub-folder }}" -type f -exec sed -i "s|${{ inputs.sub-folder }}|${{ inputs.destination-sub-folder }}|g" {} +

      - name: Commit changes to repository
        run: |
          echo "Setting up Git configuration for commit."
          git config user.name "GitHub Actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          echo "Committing changes with message: 'Copy and replace sub-folder from ${{ inputs.sub-folder }} to ${{ inputs.destination-sub-folder }}'"
          git commit -am "Copy and replace sub-folder '${{ inputs.sub-folder }}' with '${{ inputs.destination-sub-folder }}'"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main
